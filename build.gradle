plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "meteor-maven"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        name = "masa"
        url = "https://masa.dy.fi/maven"
        content {
            includeGroup "fi.dy.masa.malilib"
        }
    }
    maven {
        name = "curseforge"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"

    // Litematica (https://github.com/maruohon/litematica)
	modImplementation("fi.dy.masa.malilib:malilib-fabric-${project.malilib_version}")
	modImplementation("curse.maven:litematica-${project.litematica_projectid}:${project.litematica_fileid}")
}

loom {
    accessWidenerPath = file("src/main/resources/moonware.accesswidener")
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mc_version": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}
